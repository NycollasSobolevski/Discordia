{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let NewPostComponent = class NewPostComponent {\n  constructor(forumService, postService) {\n    this.forumService = forumService;\n    this.postService = postService;\n    this.titleCount = 0;\n    this.textCount = 0;\n    this.title = '';\n    this.text = '';\n    this.viewContainer = false;\n    this.avaliableForums = [];\n    this.jwt = {\n      value: sessionStorage.getItem('jwt') ?? \"\"\n    };\n    this.post = {\n      creatorIdJwt: this.jwt.value,\n      forumTitle: this.title,\n      title: this.title,\n      content: this.text,\n      images: \"not Implemented\"\n    };\n  }\n  ngOnInit() {\n    this.getAvaliableForums();\n  }\n  getAvaliableForums() {\n    return this.forumService.GetUserForums(this.jwt).subscribe(item => {\n      let list = [];\n      item.forEach(forums => {\n        list.push(forums);\n      });\n      this.avaliableForums = list;\n      console.log(this.avaliableForums);\n    });\n  }\n  getSelectValue() {}\n  updateText(newValue) {\n    this.textCount = newValue.length;\n  }\n  updateTitle(newValue) {\n    this.titleCount = newValue.length;\n  }\n  view() {\n    this.viewContainer = !this.viewContainer;\n  }\n  checkContent() {\n    return this.textCount > 0;\n  }\n  createPost() {\n    if (!this.checkContent)\n      //! : Alert colocar alerta de conteudo faltante\n      this.postService.CreatePost(this.post).subscribe({\n        next: returned => {\n          location.reload();\n          console.log(\"Post Inserted\\n\\n\" + returned);\n        },\n        error: err => {\n          console.log(err);\n        }\n      });\n  }\n};\nNewPostComponent = __decorate([Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.css']\n})], NewPostComponent);","map":{"version":3,"names":["Component","NewPostComponent","constructor","forumService","postService","titleCount","textCount","title","text","viewContainer","avaliableForums","jwt","value","sessionStorage","getItem","post","creatorIdJwt","forumTitle","content","images","ngOnInit","getAvaliableForums","GetUserForums","subscribe","item","list","forEach","forums","push","console","log","getSelectValue","updateText","newValue","length","updateTitle","view","checkContent","createPost","CreatePost","next","returned","location","reload","error","err","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\disrct\\Desktop\\Projeto Discordia\\Discordia\\src\\app\\new-post\\new-post.component.ts"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\n\nimport { ForumToBack } from '../services/Forum'\nimport { Jwt } from '../services/person';\nimport { Forum, Post } from '../services/Model';\nimport { ForumService } from '../services/forum.service';\nimport { PostService } from '../services/post.service';\n\n@Component({\n  selector: 'app-new-post',\n  templateUrl: './new-post.component.html',\n  styleUrls: ['./new-post.component.css']\n})\nexport class NewPostComponent {\n\n  constructor (\n    private forumService : ForumService,\n    private postService : PostService\n    ){}\n\n  protected titleCount = 0;\n  protected textCount = 0;\n  protected title = '';\n  protected text = '';\n  protected viewContainer = false;\n\n  protected avaliableForums : any[] = []\n\n\n  ngOnInit(){\n    this.getAvaliableForums();\n  }\n\n\n  private jwt : Jwt = {\n    value : sessionStorage.getItem('jwt') ?? \"\"\n  }\n  \n  getAvaliableForums(){\n    return this.forumService\n      .GetUserForums(this.jwt)\n      .subscribe( item => {\n        let list: Forum[] = []\n        item.forEach(forums => {\n          list.push(forums)\n        })\n        this.avaliableForums = list;\n        console.log(this.avaliableForums);\n      })\n  }\n\n  getSelectValue()\n  {\n    \n  }\n\n  protected updateText(newValue : string){\n    this.textCount = newValue.length ;\n  }\n  protected updateTitle(newValue : string) {\n  this.titleCount = newValue.length ;\n  }\n  protected view(){\n    this.viewContainer = !this.viewContainer;\n  } \n\n  protected post : Post = {\n    creatorIdJwt : this.jwt.value,\n    forumTitle : this.title,\n    title : this.title,\n    content : this.text,\n    images : \"not Implemented\"\n  }\n\n  checkContent(){\n    return this.textCount > 0\n  }\n\n  createPost(){\n    if(!this.checkContent)\n      //! : Alert colocar alerta de conteudo faltante\n    this.postService.CreatePost(this.post)\n      .subscribe({\n        next: (returned) => {\n          location.reload()\n          console.log(\"Post Inserted\\n\\n\" + returned);\n        },\n        error: (err) => {\n          console.log(err);\n          \n        }\n      })\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAkB,eAAe;AAa5C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAE3BC,YACUC,YAA2B,EAC3BC,WAAyB;IADzB,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,WAAW,GAAXA,WAAW;IAGX,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,SAAS,GAAG,CAAC;IACb,KAAAC,KAAK,GAAG,EAAE;IACV,KAAAC,IAAI,GAAG,EAAE;IACT,KAAAC,aAAa,GAAG,KAAK;IAErB,KAAAC,eAAe,GAAW,EAAE;IAQ9B,KAAAC,GAAG,GAAS;MAClBC,KAAK,EAAGC,cAAc,CAACC,OAAO,CAAC,KAAK,CAAC,IAAI;KAC1C;IA8BS,KAAAC,IAAI,GAAU;MACtBC,YAAY,EAAG,IAAI,CAACL,GAAG,CAACC,KAAK;MAC7BK,UAAU,EAAG,IAAI,CAACV,KAAK;MACvBA,KAAK,EAAG,IAAI,CAACA,KAAK;MAClBW,OAAO,EAAG,IAAI,CAACV,IAAI;MACnBW,MAAM,EAAG;KACV;EAtDG;EAWJC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAOAA,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAAClB,YAAY,CACrBmB,aAAa,CAAC,IAAI,CAACX,GAAG,CAAC,CACvBY,SAAS,CAAEC,IAAI,IAAG;MACjB,IAAIC,IAAI,GAAY,EAAE;MACtBD,IAAI,CAACE,OAAO,CAACC,MAAM,IAAG;QACpBF,IAAI,CAACG,IAAI,CAACD,MAAM,CAAC;MACnB,CAAC,CAAC;MACF,IAAI,CAACjB,eAAe,GAAGe,IAAI;MAC3BI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACpB,eAAe,CAAC;IACnC,CAAC,CAAC;EACN;EAEAqB,cAAcA,CAAA,GAGd;EAEUC,UAAUA,CAACC,QAAiB;IACpC,IAAI,CAAC3B,SAAS,GAAG2B,QAAQ,CAACC,MAAM;EAClC;EACUC,WAAWA,CAACF,QAAiB;IACvC,IAAI,CAAC5B,UAAU,GAAG4B,QAAQ,CAACC,MAAM;EACjC;EACUE,IAAIA,CAAA;IACZ,IAAI,CAAC3B,aAAa,GAAG,CAAC,IAAI,CAACA,aAAa;EAC1C;EAUA4B,YAAYA,CAAA;IACV,OAAO,IAAI,CAAC/B,SAAS,GAAG,CAAC;EAC3B;EAEAgC,UAAUA,CAAA;IACR,IAAG,CAAC,IAAI,CAACD,YAAY;MACnB;MACF,IAAI,CAACjC,WAAW,CAACmC,UAAU,CAAC,IAAI,CAACxB,IAAI,CAAC,CACnCQ,SAAS,CAAC;QACTiB,IAAI,EAAGC,QAAQ,IAAI;UACjBC,QAAQ,CAACC,MAAM,EAAE;UACjBd,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGW,QAAQ,CAAC;QAC7C,CAAC;QACDG,KAAK,EAAGC,GAAG,IAAI;UACbhB,OAAO,CAACC,GAAG,CAACe,GAAG,CAAC;QAElB;OACD,CAAC;EACN;CACD;AAhFY5C,gBAAgB,GAAA6C,UAAA,EAL5B9C,SAAS,CAAC;EACT+C,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWhD,gBAAgB,CAgF5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}