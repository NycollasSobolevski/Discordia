{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class NewAccountComponent {\n  constructor() {\n    this.OnLoginClicked = new EventEmitter();\n    // constructor(private service: UserService) {}\n    this.rePassword = '';\n    this.alertContent = '';\n    this.alertDiv = false;\n    this.alertLevel = 1;\n    this.user = {\n      id: 0,\n      name: '',\n      birth: new Date(),\n      email: '',\n      photo: '',\n      password: '',\n      salt: ''\n    };\n  }\n  checkPassword() {\n    return this.user.password === this.rePassword;\n  }\n  validatePassword() {\n    if (this.checkPassword()) {\n      this.alertDiv = true;\n      this.alertContent = 'Passwords are different';\n      this.alertLevel = 1;\n    }\n  }\n  signInClicked() {\n    console.log(this.user + 'OKAY');\n    if (!this.checkPassword()) {\n      this.alertDiv = true;\n      this.alertContent = 'Passwords are different';\n      this.alertLevel = 2;\n      return;\n    }\n    // this.service\n    //   .registerUser(this.pessoinha)\n    //   .subscribe(response => {\n    // })\n  }\n\n  loginClicked() {\n    this.OnLoginClicked.emit();\n  }\n}\nNewAccountComponent.ɵfac = function NewAccountComponent_Factory(t) {\n  return new (t || NewAccountComponent)();\n};\nNewAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewAccountComponent,\n  selectors: [[\"app-new-account\"]],\n  outputs: {\n    OnLoginClicked: \"OnLoginClicked\"\n  },\n  decls: 37,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"content\"], [\"id\", \"image-input\"], [\"for\", \"profile-photo\"], [\"src\", \"../../assets/images/person-standard-logo.png\", \"width\", \"100\", \"alt\", \"Image Preview\"], [\"type\", \"file\", \"id\", \"profile-photo\", \"accept\", \"image/*\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Example Name\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"placeholder\", \"example@domain.com\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"pass\"], [\"id\", \"pass\", \"type\", \"password\", \"placeholder\", \"********\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"re-pass\"], [\"id\", \"re-pass\", \"type\", \"password\", \"placeholder\", \"********\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"birth\"], [\"id\", \"birth\", \"type\", \"date\", \"placeholder\", \"dd/mm/yyyy\", 3, \"ngModel\", \"ngModelChange\"], [1, \"buttons\"], [3, \"click\"], [\"id\", \"alert\"]],\n  template: function NewAccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Create Account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"span\", 2)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Profile Photo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\");\n      i0.ɵɵelement(9, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"span\")(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function NewAccountComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.user.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"span\")(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NewAccountComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"span\")(20, \"label\", 10);\n      i0.ɵɵtext(21, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function NewAccountComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.user.password = $event;\n      })(\"change\", function NewAccountComponent_Template_input_change_22_listener() {\n        return ctx.validatePassword();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"span\")(24, \"label\", 12);\n      i0.ɵɵtext(25, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function NewAccountComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.rePassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"span\")(28, \"label\", 14);\n      i0.ɵɵtext(29, \"Birthday\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function NewAccountComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.user.birth = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 16)(32, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function NewAccountComponent_Template_button_click_32_listener() {\n        return ctx.loginClicked();\n      });\n      i0.ɵɵtext(33, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\");\n      i0.ɵɵtext(35, \"Sign In\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(36, \"div\", 18);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.rePassword);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.birth);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 618:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(65:5) C:\\\\\\\\Users\\\\\\\\disrct\\\\\\\\Desktop\\\\\\\\Projeto Discordia\\\\\\\\Discordia\\\\\\\\src\\\\\\\\app\\\\\\\\new-account\\\\\\\\new-account.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 63 | \\\\u001b[39m    position\\\\u001b[33m:\\\\u001b[39m absolute\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 64 | \\\\u001b[39m    bor\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 65 | \\\\u001b[39m    background-color\\\\u001b[33m:\\\\u001b[39m aqua\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 66 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n\\n\\n \\t\\n\\n \\t//[_ngcontent-%COMP%]   startup\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports\\n\\n[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined\\n\\n[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n\\n \\t__webpack_modules__[618]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=new-account.component.css.map*/\"]\n});","map":{"version":3,"names":["EventEmitter","NewAccountComponent","constructor","OnLoginClicked","rePassword","alertContent","alertDiv","alertLevel","user","id","name","birth","Date","email","photo","password","salt","checkPassword","validatePassword","signInClicked","console","log","loginClicked","emit","selectors","outputs","decls","vars","consts","template","NewAccountComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","NewAccountComponent_Template_input_ngModelChange_14_listener","$event","NewAccountComponent_Template_input_ngModelChange_18_listener","NewAccountComponent_Template_input_ngModelChange_22_listener","NewAccountComponent_Template_input_change_22_listener","NewAccountComponent_Template_input_ngModelChange_26_listener","NewAccountComponent_Template_input_ngModelChange_30_listener","NewAccountComponent_Template_button_click_32_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\disrct\\Desktop\\Projeto Discordia\\Discordia\\src\\app\\new-account\\new-account.component.ts","C:\\Users\\disrct\\Desktop\\Projeto Discordia\\Discordia\\src\\app\\new-account\\new-account.component.html"],"sourcesContent":["import { Component, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Person } from '../services/person'\nimport { UserService } from '../services/person.service';\n\n@Component({\n  selector: 'app-new-account',\n  templateUrl: './new-account.component.html',\n  styleUrls: ['./new-account.component.css']\n})\nexport class NewAccountComponent {\n  @Output() OnLoginClicked = new EventEmitter();\n\n  // constructor(private service: UserService) {}\n\n  protected rePassword = '';\n  protected alertContent = '';\n  protected alertDiv = false;\n  protected alertLevel = 1;\n\n  user : Person = {\n    id : 0,\n    name : '',\n    birth : new Date,\n    email : '',\n    photo : '',\n    password : '',\n    salt : ''\n  }\n\n  checkPassword() {\n    return this.user.password === this.rePassword\n  }\n\n  validatePassword(){\n    if(this.checkPassword())\n    {\n      this.alertDiv = true;\n      this.alertContent = 'Passwords are different'\n      this.alertLevel = 1\n    }\n  }\n\n  signInClicked(){\n    console.log(this.user + 'OKAY');\n\n    if (!this.checkPassword()) {\n      this.alertDiv = true;\n      this.alertContent = 'Passwords are different'\n      this.alertLevel = 2\n      return\n    }\n    \n    // this.service\n    //   .registerUser(this.pessoinha)\n    //   .subscribe(response => {\n        \n    // })\n    \n  \n  }\n  loginClicked()\n  {\n    this.OnLoginClicked.emit();\n  }\n}\n","<div class=\"container\">\n  <div class=\"content\">\n    <h2>Create Account</h2>\n    <div>\n      <span id=\"image-input\">\n        <label for=\"profile-photo\">Profile Photo</label>\n        <button>\n          <img src=\"../../assets/images/person-standard-logo.png\" width=\"100\" alt=\"Image Preview\">\n        </button>\n        <input type=\"file\" id=\"profile-photo\" accept=\"image/*\">\n      </span>\n      <span>\n        <label for=\"name\">Name</label>\n        <input [(ngModel)]=\"user.name\" id=\"name\" type=\"text\" placeholder=\"Example Name\" />\n      </span>\n      <span>\n        <label for=\"email\">Email</label>\n        <input [(ngModel)]=\"user.email\" id=\"email\" type=\"email\" placeholder=\"example@domain.com\" />\n      </span>\n      <span>\n        <label for=\"pass\">Password</label>\n        <input [(ngModel)]=\"user.password\" (change)=\"validatePassword()\" id=\"pass\" type=\"password\" placeholder=\"********\" />\n      </span>\n      <span>\n        <label for=\"re-pass\">Confirm Password</label>\n        <input [(ngModel)]=\"rePassword\" id=\"re-pass\" type=\"password\" placeholder=\"********\" />\n      </span>\n      <span>\n        <label for=\"birth\">Birthday</label>\n        <input [(ngModel)]=\"user.birth\" id=\"birth\" type=\"date\" placeholder=\"dd/mm/yyyy\" />\n      </span>\n      <div class=\"buttons\">\n        <button (click)=\"loginClicked()\">Login</button>\n        <button >Sign In</button>\n      </div>\n    </div>\n    <div id=\"alert\"></div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}